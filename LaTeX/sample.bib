@book{ProgrammingPearls,
 author = {Bentley, Jon},
 title = {Programming Pearls (2Nd Ed.)},
 year = {2000},
 isbn = {0-201-65788-0},
 source = {ACM member price \$22.45, order no. 702003},
 publisher = {ACM Press/Addison-Wesley Publishing Co.},
 address = {New York, NY, USA}
} 

@book{ManMonth,
 author = {Bentley, Jon},
 title = {Programming Pearls (2Nd Ed.)},
 year = {2000},
 isbn = {0-201-65788-0},
 source = {ACM member price \$22.45, order no. 702003},
 publisher = {ACM Press/Addison-Wesley Publishing Co.},
 address = {New York, NY, USA}
}

@article{Glass:2002:SOS:581571.581584,
 author = {Glass, Robert L.},
 title = {Sorting out Software Complexity},
 journal = {Commun. ACM},
 issue_date = {November 2002},
 volume = {45},
 number = {11},
 month = nov,
 year = {2002},
 issn = {0001-0782},
 pages = {19--21},
 numpages = {3},
 doi = {10.1145/581571.581584},
 acmid = {581584},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@inproceedings{McNicholl:1982:SNP:800049.801785,
 author = {McNicholl, Daniel G. and Magel, Ken},
 title = {The Subjective Nature of Programming Complexity},
 booktitle = {Proceedings of the 1982 Conference on Human Factors in Computing Systems},
 series = {CHI '82},
 year = {1982},
 location = {Gaithersburg, Maryland, USA},
 pages = {229--234},
 numpages = {6},
 doi = {10.1145/800049.801785},
 acmid = {801785},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@proceedings{Popli:2014:CEE:2014.6798284,
 author = {Popli, Rashmi and Chauhan, Naresh},
 year = {2014},
 month = {02},
 pages = {57-61},
 title = {Cost and effort estimation in agile software development},
 isbn = {978-1-4799-2995-5},
 doi = {10.1109/ICROIT.2014.6798284},
 booktitle = {ICROIT 2014 - Proceedings of the 2014 International Conference on Reliability, Optimization and Information Technology}
}

@article{edseee.788021620160101,
Abstract = {Estimation is very important and integral part of software development life cycle. Without estimation of effort, duration and cost, software cannot be developed. It is important to do accurate estimation as much as possible. Today in Information technology Industry Estimation in agile software development is mostly based on heuristic approaches like expert judgment and planning poker. In absence of agile experts, it is very difficult to estimate in agile software development. There is need of a algorithmic method in agile software development which can do accurate estimates. In this paper, we propose a simple algorithmic estimation method for agile software development and compare the results given by proposed method to check the feasibility of algorithmic method in real time.},
ISSN = {978-1-5090-3249-5},
Journal = {2016 Ninth International Conference on Contemporary Computing (IC3), Contemporary Computing (IC3), 2016 Ninth International Conference on},
Keywords = {Communication, Networking and Broadcast Technologies, Computing and Processing, Robotics and Control Systems, Signal Processing and Analysis, Estimation, Software, Agile software development, Companies, Software algorithms, Complexity theory, Information technology, Duration Estimation, Agile Software Development, Effort Estimation, Cost Estimation},
Pages = {1},
Title = {Effort, duration and cost estimation in agile software development.},
Year = {2016},
}

@book{McConnell:2006:SED:1204642,
 author = {McConnell, Steve},
 title = {Software Estimation: Demystifying the Black Art},
 year = {2006},
 isbn = {0735605351, 9780735605350},
 publisher = {Microsoft Press},
 address = {Redmond, WA, USA},
}

@incollection{Boehm:2002:SEE:944331.944370,
 author = {Boehm, Barry W.},
 chapter = {Software Engineering Economics},
 title = {Software Pioneers},
 editor = {Broy, Manfred and Denert, Ernst},
 year = {2002},
 isbn = {3-540-43081-4},
 pages = {641--686},
 numpages = {46},
 acmid = {944370},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
 keywords = {computer programming costs, cost models, management decision aids, software cost estimation, software economics, software engineering, software management},
} 

@misc{CHAOS1994,
  added-at = {2009-08-29T18:11:31.000+0200},
  author = {{The Standish Group}},
  interhash = {0c8171a91753ca6188035449143210cb},
  intrahash = {ef3089a2f83cb700e00d3b02b79e5804},
  keywords = {imported},
  timestamp = {2009-08-29T18:12:13.000+0200},
  title = {Chaos Report},
  year = 1995
}

@article{Shah:2014:GST:2562361.2562945,
 author = {Shah, Hina and Harrold, Mary Jean and Sinha, Saurabh},
 title = {Global Software Testing Under Deadline Pressure: Vendor-side Experiences},
 journal = {Inf. Softw. Technol.},
 issue_date = {January, 2014},
 volume = {56},
 number = {1},
 month = jan,
 year = {2014},
 issn = {0950-5849},
 pages = {6--19},
 numpages = {14},
 doi = {10.1016/j.infsof.2013.04.005},
 acmid = {2562945},
 publisher = {Butterworth-Heinemann},
 address = {Newton, MA, USA},
 keywords = {Global software development, Global software engineering, Software testing},
} 

@inproceedings{Shah:2010:SHS:1833310.1833327,
 author = {Shah, Hina and Harrold, Mary Jean},
 title = {Studying Human and Social Aspects of Testing in a Service-based Software Company: Case Study},
 booktitle = {Proceedings of the 2010 ICSE Workshop on Cooperative and Human Aspects of Software Engineering},
 series = {CHASE '10},
 year = {2010},
 isbn = {978-1-60558-966-4},
 location = {Cape Town, South Africa},
 pages = {102--108},
 numpages = {7},
 doi = {10.1145/1833310.1833327},
 acmid = {1833327},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {attitudes, ethnography, field study, human factors, motivation, qualitative study, software testing},
}

@techreport{talentshortage2018,
    author = {ManpowerGroup},
    title = {2018 Talent Shortage Survey},
    institution = {ManpowerGroup},
    year = {2018},
}

@techreport{forresterwavelowcodeq4,
    author = {Forrester},
    title = {The Forrester Wave\textsuperscript{TM}: Low-Code Development Platforms For AD\&D Pros, Q4 2017},
    institution = {Forrester},
}

@misc{benefitsoflowcode,
    author    = "Jon Idle",
    title     = "Rapid Response",
    year     = "2016",
    month    = "Nov",
}

@techreport{forresterpubliccloudmarket,
    author = {Forrester},
    title = {The Public Cloud Services Market Will Grow Rapidly To \$236 Billion In 2020},
    institution = {Forrester},
}

@Article{socsci7090159,
AUTHOR = {Paul, Suchandra},
TITLE = {An Analysis of the Skill Shortage Problems in Indian IT Companies},
JOURNAL = {Social Sciences},
VOLUME = {7},
YEAR = {2018},
NUMBER = {9},
ARTICLE-NUMBER = {159},
ISSN = {2076-0760},
ABSTRACT = {Skill shortage is a crucial social issue which needs to be analyzed thoroughly in any organization. In this paper, the problems related to the skill shortage are analyzed and possible solutions are provided to deal with the problem of skill shortages effectively. This paper will facilitate in helping the organization to find the right talent for the organization thus removing or decreasing the problem of skill shortages. The paper begins with the importance of skills shortage from a theoretical point of view. The problems associated are highlighted and analyzed. The factors which are an integral part of skill shortages are elaborated. Also, an in-depth analysis is carried out by considering the organizations, Tata Consultancy Services and Infosys as a case study. In the final section, various solutions and approaches are laid down to tackle the problems incorporated with skill shortages.},
DOI = {10.3390/socsci7090159}
}

@misc{buildbuyoutsource,
    author    = "Blechar, Michael",
    title     = "Build, Buy and Outsource Decision Factors",
    year     = "2002",
    month    = "Dec",
}

@article{effectsofsunk:keil,
author = {Keil, Mark and Truex, Duane and Mixon, Richard},
year = {1995},
month = {12},
pages = {372 - 381},
title = {Effects of sunk cost and project completion on information technology project escalation},
volume = {42},
booktitle = {Engineering Management, IEEE Transactions on}
}

@article{4880739320100301,
Abstract = {The article focuses on scope creep and its impact on the project. The author explains that scope creep refers to the gradual expansion of project work without taking into considerations its associated costs and schedule effects. He also reveals some reasons why scope creep occur including poor initial requirements and the lack of formal review and approval process for changes.},
Author = {Turk, Wayne},
ISSN = {15475476},
Journal = {Defense AT \& L},
Keywords = {PROJECT management, PROJECT finance, PLANNING, PRODUCTION scheduling, INDUSTRIAL management},
Number = {2},
Pages = {53 - 55},
Title = {Scope Creep Horror.},
Volume = {39},
Year = {2010},
}

@article{12496500420170901,
Abstract = {The article offers information on several tips for accounting professionals to prevent scope creep during fixed-fee pricing agreement with a client. Topics include preparing for an in-depth conversation with the client that will involve accounting needs and payrolls, setting a fixed-fee price for the added work that the client requested, and practicing the conversation with a client.},
Author = {Megia, Misty},
ISSN = {10445714},
Journal = {Accounting Today},
Keywords = {Fixed prices, Client relations, Accounting firms, Payrolls, Industrial management},
Number = {9},
Pages = {60},
Title = {Stop scope creep before it starts.},
Volume = {31},
Year = {2017},
}

@article{8672560520130301,
Abstract = {Generation of software requirements can occur in different ways during the course of the project, affecting the process in a widely different manner and extent. Using system dynamics modeling approach, here we study the impact of scope creep following different patterns on the project quality assurance activity. Results indicate non-uniform deviations across values of certain process parameters like quality assurance effort, error detection, etc under the experimental scenarios. Findings are expected to assist project managers in devising approaches that contribute to better quality of the final delivery. [ABSTRACT FROM AUTHOR]},
Author = {Thakurta, Rahul},
ISSN = {09731954},
Journal = {Vilakshan: The XIMB Journal of Management},
Keywords = {Quality assurance, Quality control, Software refactoring, Dynamical systems, Error detection & recovery in robotics, Metric geometry, Quality Assurance, Scope Creep, System Dynamics},
Number = {1},
Pages = {37 - 46},
Title = {Impact of Scope Creep on Software Project Quality.},
Volume = {10},
Year = {2013},
}

@article{edseee.459163720080101,
Abstract = {Numerous studies have shown that a software projectpsilas cost, schedule and defect density escalate as the rate of requirements change increases. Yet none of these studies have explored the effects of not making requirements changes in response to changes in user needs. This paper explains why a project incurs just as much, if not more, risk when requirements changes are suppressed.},
ISSN = {978-0-7695-3262-2},
Journal = {2008 32nd Annual IEEE International Computer Software and Applications Conference, Computer Software and Applications, 2008. COMPSAC '08. 32nd Annual IEEE International},
Keywords = {Computing and Processing, Communication, Networking and Broadcast Technologies, Gallium, Software, IEEE Computer Society Press, Artificial neural networks, Complexity theory, Australia, Software engineering, software risks, requirements engineering, requirements management, user needs, requirements change, requirements volatility},
Pages = {635},
Title = {Requirements Change: What's the Alternative?.},
Year = {2008},
}

@article{2799245720071101,
Abstract = {Drawing upon the requirements and software development literature, the present study proposes an integrative contingency model for requirements development. Based on 116 quality journal articles, we analyze requirements development risks, requirements development techniques, and heuristics for how they are effectively related. Subsequently, we synthesize the insights from the identified literature into a model for requirements development that relates patterns of risk resolution to archetypical risk profiles. The model integrates the literature on requirements and software development; sets the scene for future research; and, finally, proposes how practitioners can manage risks in requirements development projects. [ABSTRACT FROM AUTHOR]},
Author = {Mathiassen, Lars and Saarinen, Timo and Tuunanen, Tuure and Rossi, Matti},
ISSN = {15369323},
Journal = {Journal of the Association for Information Systems},
Keywords = {Contingency theory (Management), Computer software development, Systems development, Risk management in business, Information resources management, Electronic data processing, Information technology, Computer programming management, Models & modelmaking, contingency theory, Requirements development, risk management},
Number = {11},
Pages = {569 - 597},
Title = {A Contigency Model for Requirements Development.},
Volume = {8},
Year = {2007},
}

@techreport{wqr1718,
    author = "Capgemini and others",
    title = "World Quality Report 2017-18",
    institution = "Capgemini",
    year = "2017"
}

@techreport{waytwn,
    author = "Fernandes, Joe and Di Fonzo, Alex",
    title = "When to Automate Your Testing (and When Not To)",
    institution = "Oracle",
}

@techreport{lowcodemarket,
    author = "Markets and Markets",
    title = "Low-Code Development Platform Market by Component (Solution and Services (Professional and Managed)), Deployment Mode, Organization Size, Vertical (Telecom and IT, BFSI, Government), and Region - Global Forecast to 2022",
    institution = "Markets and Markets",
	year = {2018}
}



@article{718084420020805,
Abstract = {Discusses the findings of the Economic Impacts of Inadequate Infrastructure for Software Testing about the costs of software bugs and errors in the U.S. Estimated cost of damages from software bugs and errors; Reason for the prevalence of software errors; Short list of software problems faced by the transportation equipment and financial services industries.},
Author = {Trembly, Ara C.},
ISSN = {08938202},
Journal = {National Underwriter / Life \& Health Financial Services},
Keywords = {COMPUTER software, MANUFACTURING defects, UNITED States},
Number = {31},
Pages = {43},
Title = {Software Bugs Cost Billions Annually.},
Volume = {106},
Year = {2002},
}

@book{McConnell:2004:CCS:1096143,
 author = {McConnell, Steve},
 title = {Code Complete, Second Edition},
 year = {2004},
 isbn = {0735619670, 9780735619678},
 publisher = {Microsoft Press},
 address = {Redmond, WA, USA},
}

@article{edseee.622898820120101,
Abstract = {There is a documented gap between academic and practitioner views on software testing. This paper tries to close the gap by investigating both views regarding the benefits and limits of test automation. The academic views are studied with a systematic literature review while the practitioners views are assessed with a survey, where we received responses from 115 software professionals. The results of the systematic literature review show that the source of evidence regarding benefits and limitations is quite shallow as only 25 papers provide the evidence. Furthermore, it was found that benefits often originated from stronger sources of evidence (experiments and case studies), while limitations often originated from experience reports. We believe that this is caused by publication bias of positive results. The survey showed that benefits of test automation were related to test reusability, repeatability, test coverage and effort saved in test executions. The limitations were high initi},
ISSN = {978-1-4673-1821-1},
Journal = {2012 7th International Workshop on Automation of Software Test (AST), Automation of Software Test (AST), 2012 7th International Workshop on},
Keywords = {Computing and Processing, Testing, Automation, Manuals, Software, Investments, Systematics, Industries, limitations, automated software testing, benefits},
Pages = {36},
Title = {Benefits and limitations of automated software testing: Systematic literature review and practitioner survey.},
Year = {2012},
}

@article{Bugayenko:2018:DBE:3271489.3237196,
 author = {Bugayenko, Yegor},
 title = {Discovering Bugs, or Ensuring Success?},
 journal = {Commun. ACM},
 issue_date = {September 2018},
 volume = {61},
 number = {9},
 month = aug,
 year = {2018},
 issn = {0001-0782},
 pages = {12--13},
 numpages = {2},
 doi = {10.1145/3237196},
 acmid = {3237196},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@article{2033559820060301,
Abstract = {We present a model of fixing or patching a software problem after the product has been released in the market. Specifically, we model a software firm's trade-off in releasing a buggy product early and investments in fixing it later. Just as the marginal cost of producing software can be effectively zero, so can the marginal cost of repairing multiple copies of defective software by issuing patches. We show that due to the fixed cost nature of investments in patching, a software vendor has incentives to release a buggier product early and patch it later in a larger market. Thus, a software monopolist releases a product with fewer bugs but later than what is socially optimal. We contrast this result with physical good markets where market size does not play any role in quality provision. We also show that for comparable costs, a software monopolist releases the product with more bugs but invests more in post-patching support later than the physical good monopolist. [ABSTRACT FROM AUTHOR},
Author = {Arora, Ashish and Caulkins, Jonathan P. and Telang, Rahul},
ISSN = {00251909},
Journal = {Management Science},
Keywords = {Time to market (New products), Computer software quality control, Marketing research, Manufacturing defects, Market entry, MANAGEMENT, Rapid prototyping, Product quality, Overhead costs, Direct costing, Market equilibrium, Monopolies, Software failures, Software maintenance, Computer software industry, Fixed costs, Patching, software bugs, Software Quality, time of entry},
Number = {3},
Pages = {465 - 471},
Title = {Research Note--Sell First, Fix Later: Impact of Patching on Software Quality.},
Volume = {52},

Year = {2006},
}

@article{12436424020170801,
Abstract = {The article offers information on several low-code software development platform, including the Quick Apps from Appian, PowerApps from Microsoft, and the App Maker from Google.},
Author = {MARVIN, ROB},
ISSN = {23732830},
Journal = {PC Magazine},
Keywords = {Appian Corp., Microsoft Corp., Google Inc.},
Pages = {69 - 76},
Title = {Five Top Low-Code Development Platforms.},

Year = {2017},
}

@ARTICLE{6835311,
author={},
journal={IEEE Std 730-2014 (Revision of IEEE Std 730-2002)},
title={IEEE Standard for Software Quality Assurance Processes},
year={2014},
volume={},
number={},
pages={1-138},
keywords={IEC standards;IEEE standards;ISO standards;project management;software maintenance;software quality;IEEE Std 730-2002;IEEE Std 730-2014;IEEE standard;ISO-IEC-IEEE 12207:2008;ISO-IEC-IEEE 15289:2011;information content requirements;maintenance project;software development;software life cycle process;software quality assurance process;IEEE standards;Project management;Quality assurance;Quality of service;Software quality;Software testing;IEEE 730(TM);SQA;assurance;conformance;contract;cycle;management;project;quality;requirements;software;standard},
doi={10.1109/IEEESTD.2014.6835311},
ISSN={},
month={June},}

@article{edseee.422161420070101,
Abstract = {Software engineering comprehends several disciplines devoted to prevent and remedy malfunctions and to warrant adequate behaviour. Testing, the subject of this paper, is a widespread validation approach in industry, but it is still largely ad hoc, expensive, and unpredictably effective. Indeed, software testing is a broad term encompassing a variety of activities along the development cycle and beyond, aimed at different goals. Hence, software testing research faces a collection of challenges. A consistent roadmap of the most relevant challenges to be addressed is here proposed. In it, the starting point is constituted by some important past achievements, while the destination consists of four identified goals to which research ultimately tends, but which remain as unreachable as dreams. The routes from the achievements to the dreams are paved by the outstanding research challenges, which are discussed in the paper along with interesting ongoing work.},
ISSN = {0-7695-2829-5},
Journal = {Future of Software Engineering (FOSE '07), Future of Software Engineering, 2007. FOSE '07},
Keywords = {Computing and Processing, Software testing, Software engineering, Laboratories, Software systems, Software quality, Councils, Computer industry, Quality assurance, Feedback, State estimation},
Pages = {85},
Title = {Software Testing Research: Achievements, Challenges, Dreams.},

Year = {2007},
}

@article{3721739420090301,
Abstract = {The article focuses on the importance of vocational education and training system to skills shortage in Australia. It highlights the importance of the vocational education and training system as a solution to solve the skills shortage problems in the country because the supply of workers is insufficient to satisfy the in demand profession. It explores the problem that a specialization of the a degree can affect the qualification of a person in his job search. The incompatibility of skills of the worker to the qualifcation of the needed profession does not match.},
Author = {Richardson, Sue},
ISSN = {03116336},
Journal = {Australian Bulletin of Labour},
Keywords = {VOCATIONAL education, ABILITY, SCARCITY, TRAINING, JOB qualifications, JOB hunting, LABOR market, EXPERTISE, AUSTRALIA},
Number = {1},
Pages = {326 - 354},
Title = {What is a Skill Shortage?.},
Volume = {35},
Year = {2009},
}

@article{136501619990101,
Abstract = {Details a survey that shows how severe the problem of defects in computer software is as of late 1998, and which companies give consumers the most help. Reaction from users that problems are on the rise and software vendors are to blame; Tips to work around problem software; Web sites to get relief from problem software. INSET: The Ugly Bug Hall of Shame.},
Author = {Spanbauer, Scott},
ISSN = {07378939},
Journal = {PCWorld},
Keywords = {COMPUTER software, COMPUTER software industry, COMPUTER industry, CUSTOMER satisfaction},
Number = {1},
Pages = {47},
Title = {Software Bugs Run Rampant. (cover story).},
Volume = {17},
Year = {1999},
}

@article{edseee.817008920170101,
Abstract = {Context. Considering the importance of software testing to the development of high quality and reliable software systems, this paper aims to investigate how can work-related factors influence the motivation of software testers. Method. We applied a questionnaire that was developed using a previous theory of motivation and satisfaction of software engineers to conduct a survey-based study to explore and understand how professional software testers perceive and value work-related factors that could influence their motivation at work. Results. With a sample of 80 software testers we observed that software testers are strongly motivated by variety of work, creative tasks, recognition for their work, and activities that allow them to acquire new knowledge, but in general the social impact of this activity has low influence on their motivation. Conclusion. This study discusses the difference of opinions among software testers, regarding work-related factors that could impact their motivatio},
ISSN = {978-1-5090-4039-1},
Journal = {2017 ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), Empirical Software Engineering and Measurement (ESEM), 2017 ACM/IEEE International Symposium on, ESEM},
Keywords = {Computing and Processing, Software, Software testing, Software engineering, Instruments, Human factors, Engineering profession, Software Testing, Motivation, Software Engineering},
Pages = {95},
Title = {Would You Like to Motivate Software Testers? Ask Them How.},
Year = {2017},
}

@article{S095058491600004520160501,
Abstract = {Context Software testing is the key to ensuring a successful and reliable software product or service, yet testing is often considered uninteresting work compared to design or coding. As any human-based activity, the outcome of the final software product is dependent of human factors and an essential challenge for software development organizations is to find effective ways to enhance the motivation and job-satisfaction of their testers.},
Author = {Deak, Anca and Stålhane, Tor and Sindre, Guttorm},
ISSN = {0950-5849},
Journal = {Information and Software Technology},
Pages = {1 - 15},
Title = {Challenges and strategies for motivating software testing personnel.},
Volume = {73},
Year = {2016},
}

@book{Fowler:2010:DSL:1809745,
 author = {Fowler, Martin},
 title = {Domain Specific Languages},
 year = {2010},
 isbn = {0321712943, 9780321712943},
 edition = {1st},
 publisher = {Addison-Wesley Professional},
} 

@inproceedings{Nielsen:1994:EEP:191666.191729,
 author = {Nielsen, Jakob},
 title = {Enhancing the Explanatory Power of Usability Heuristics},
 booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
 series = {CHI '94},
 year = {1994},
 isbn = {0-89791-650-6},
 location = {Boston, Massachusetts, USA},
 pages = {152--158},
 numpages = {7},
 doi = {10.1145/191666.191729},
 acmid = {191729},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {heuristic evaluation, usability problems},
} 

@mastersthesis{outsystemstesting,
  author       = {Gustavo Manuel Correia Guerra}, 
  title        = {Testing support for the OutSystems Agile Platform},
  school       = {Instituto Superior Técnico},
  year         = 2010,
  month        = 10
}

@mastersthesis{automatedoutsystemstesting,
  author       = {Ricardo Nuno Coimbra Neto}, 
  title        = {Suporte a Testes Automáticos em Aplicações Web
Geradas com a OutSystems Platform},
  school       = {Instituto Superior de Engenharia de Lisboa},
  year         = 2013,
  month        = 11
}

@ARTICLE{373902, 
author={B. A. Wichmann and A. A. Canning and D. L. Clutterbuck and L. A. Winsborrow and N. J. Ward and D. W. R. Marsh}, 
journal={Software Engineering Journal}, 
title={Industrial perspective on static analysis}, 
year={1995}, 
volume={10}, 
number={2}, 
pages={69-75}, 
keywords={safety-critical software;software metrics;software performance evaluation;software quality;software standards;system monitoring;assurance;benefit assesment;industrial perspective;safety critical software;software development;standards;static analysis;Software metrics;Software performance;Software quality;Software safety;Software standards}, 
doi={10.1049/sej.1995.0010}, 
ISSN={0268-6961}, 
month={March},}

@inproceedings{Cousot:2002:MSP:647478.727794,
 author = {Cousot, Patrick and Cousot, Radhia},
 title = {Modular Static Program Analysis},
 booktitle = {Proceedings of the 11th International Conference on Compiler Construction},
 series = {CC '02},
 year = {2002},
 isbn = {3-540-43369-4},
 pages = {159--178},
 numpages = {20},
 acmid = {727794},
 publisher = {Springer-Verlag},
 address = {London, UK, UK},
} 

@book{Binder:1999:TOS:338330,
 author = {Binder, Robert V.},
 title = {Testing Object-oriented Systems: Models, Patterns, and Tools},
 year = {1999},
 isbn = {0-201-80938-9},
 publisher = {Addison-Wesley Longman Publishing Co., Inc.},
 address = {Boston, MA, USA},
} 

@article{11833138020160601,
Abstract = {In software testing process, test data generation represents an important step for high quality software, even for mobile devices. As proposed in previous works, a potential source for random data generation is represented by the UI layout files that are used for almost all mobile platforms (Android, iOS, Windows Phone/Mobile). This paper continues the previous work and presents a test data generation system based on Android layout files. The test data generator uses DSL files as input and generates test data that conform to several testing principles. The generated test data could be stored in XML files or any format required by the testing frameworks. [ABSTRACT FROM AUTHOR]},
Author = {POCATILU, Paul and ZAMFIROIU, Alin},
ISSN = {14531305},
Journal = {Informatica Economica},
Keywords = {Computer software, Data analysis, Programming languages (Electronic computers), Mobile communication systems, Domain-specific programming languages, Mobile Applications, Software Quality, Software Testing, Test Data Generators, UI Layout Files, Unit Testing},
Number = {2},
Pages = {24 - 34},
Title = {Implementation of a Test Data Generator based on DSL Files.},
Volume = {20},
Year = {2016},
}

@article{edsdoj.524235fcf19456da9a19e566105180c20140101,
Abstract = {The article presents tCF (testCaseFramework) - a domain specific language with corresponding toolchain for specification-based software testing of embedded software. tCF is designed for efficient preparation of maintainable and intelligible test cases and for testing process automation, as it allows to generate platform specific test cases for various testing levels. The article describes the essential parts of the tCF meta-model and the applied concept of platform specific test cases generators.},
Author = {Sroka, Michal and Nagy, Roman and Fisch, Dominik},
ISSN = {1338-0532},
Journal = {Research Papers. Faculty of Materials Science and Technology. Slovak University of Technology in Trnava, Vol 22, Iss 341, Pp 23-28 (2014)},
Keywords = {Specification-based testing, Domain specific language, Abstract test case, Test design efficiency, Materials of engineering and construction. Mechanics of materials, TA401-492},
Number = {341},
Pages = {23},
Title = {Specification-Based Testing Via Domain Specific Language.},
Year = {2014},
}

@article{3190399820080301,
Abstract = {Prototyping is a technique widely used in many engineering fields. However, in software engineering, its usage is limited to requirement elicitation. Little research has been done to extend prototyping to other software development activities. In this paper, we present a prototyping-based testing model and describe how to apply prototyping to the testing activities in the entire software development process. In this model, testing of the product is performed against the prototype in every phase of software development. This prototyping-based testing model is then used in a case study to show how domain specific languages can be used to support prototyping-based testing. [ABSTRACT FROM AUTHOR]},
Author = {Liguo, Yu},
ISSN = {1816093X},
Journal = {Engineering Letters},
Keywords = {PROTOTYPES, PROGRAMMING languages (Electronic computers), TESTING, COMPUTER software development, ENGINEERING, Domain specific language, prototyping, software development, software testing},
Number = {1},
Pages = {6 - 11},
Title = {Prototyping, Domain Specific Language, and Testing.},
Volume = {16},
Year = {2008},
}

@Inbook{Anand2008,
author="Anand, Saswat
and Godefroid, Patrice
and Tillmann, Nikolai",
editor="Ramakrishnan, C. R.
and Rehof, Jakob",
title="Demand-Driven Compositional Symbolic Execution",
bookTitle="Tools and Algorithms for the Construction and Analysis of Systems: 14th International Conference, TACAS 2008, Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2008, Budapest, Hungary, March 29-April 6, 2008. Proceedings",
year="2008",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="367--381",
abstract="We discuss how to perform symbolic execution of large programs in a manner that is both compositional (hence more scalable) and demand-driven. Compositional symbolic execution means finding feasible interprocedural program paths by composing symbolic executions of feasible intraprocedural paths. By demand-driven, we mean that as few intraprocedural paths as possible are symbolically executed in order to form an interprocedural path leading to a specific target branch or statement of interest (like an assertion). A key originality of this work is that our demand-driven compositional interprocedural symbolic execution is performed entirely using first-order logic formulas solved with an off-the-shelf SMT (Satisfiability-Modulo-Theories) solver -- no procedure in-lining or custom algorithm is required for the interprocedural part. This allows a uniform and elegant way of summarizing procedures at various levels of detail and of composing those using logic formulas.",
isbn="978-3-540-78800-3",
doi="10.1007/978-3-540-78800-3_28",
}

@article{King:1976:SEP:360248.360252,
 author = {King, James C.},
 title = {Symbolic Execution and Program Testing},
 journal = {Commun. ACM},
 issue_date = {July 1976},
 volume = {19},
 number = {7},
 month = jul,
 year = {1976},
 issn = {0001-0782},
 pages = {385--394},
 numpages = {10},
 doi = {10.1145/360248.360252},
 acmid = {360252},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {program debugging, program proving, program testing, program verification, symbolic execution, symbolic interpretation},
} 

@article{Boyer:1975:SFS:390016.808445,
 author = {Boyer, Robert S. and Elspas, Bernard and Levitt, Karl N.},
 title = {SELECT\&Mdash;a Formal System for Testing and Debugging Programs by Symbolic Execution},
 journal = {SIGPLAN Not.},
 issue_date = {June 1975},
 volume = {10},
 number = {6},
 month = apr,
 year = {1975},
 issn = {0362-1340},
 pages = {234--245},
 numpages = {12},
 doi = {10.1145/390016.808445},
 acmid = {808445},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Program debugging, Program testing, Program verification, Solution of systems of inequalities, Symbolic execution, Test data generation},
} 

@techreport{otter,
    author = {Turpie, Jonathan and Reisner, Elnatan and Foster, Jeffrey and Hicks, Michael},
    title = {MultiOtter: Multiprocess Symbolic Execution},
    institution = {University of Maryland},
    year = {2011}
}

@inproceedings{Cadar:2008:KUA:1855741.1855756,
 author = {Cadar, Cristian and Dunbar, Daniel and Engler, Dawson},
 title = {KLEE: Unassisted and Automatic Generation of High-coverage Tests for Complex Systems Programs},
 booktitle = {Proceedings of the 8th USENIX Conference on Operating Systems Design and Implementation},
 series = {OSDI'08},
 year = {2008},
 location = {San Diego, California},
 pages = {209--224},
 numpages = {16},
 acmid = {1855756},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
}

@article{SurveySymExec-CSUR18,
  author    = {Baldoni, Roberto and Coppa, Emilio and D'Elia, Daniele Cono and Demetrescu, Camil and Finocchi, Irene},
  title     = {A Survey of Symbolic Execution Techniques},
  journal   = {ACM Comput. Surv.},
  volume    = {51},
  number = {3},
  articleno = {50},
  publisher = {ACM},
  address = {New York, NY, USA},
  year = {2018}
}

@article{6713475020110901,
Abstract = {The article discusses Satisfiability Modulo Theories (SMT) solvers, which are said to be the core of many tools for program analysis, testing, and verification. The topics of constraint satisfaction, propositional satisfiability, and Boolean variables are addressed. SMT solvers are able to check the satisfiability of logical formulas on a scale orders of magnitude beyond custom ad hoc solvers. Their use in software engineering tasks such as case analysis, static analysis, and modeling is also described.},
Author = {DE MOURA, LEONARDO and BJØRNER, NIKOLAJ},
ISSN = {00010782},
Journal = {Communications of the ACM},
Keywords = {Mathematical analysis, Software verification, Computer software testing, Debugging in computer science, Symbolic & mathematical logic, Boolean algebra, Mathematical formulas, Constraint programming, Integrated circuit verification, Computer software correctness, Computer logic, Propositional calculus},
Number = {9},
Pages = {69 - 77},
Title = {Satisfiability Modulo Theories: Introduction and Applications.},
Volume = {54},
Year = {2011},
}

@article{Gotlieb:1998:ATD:271775.271790,
 author = {Gotlieb, Arnaud and Botella, Bernard and Rueher, Michel},
 title = {Automatic Test Data Generation Using Constraint Solving Techniques},
 journal = {SIGSOFT Softw. Eng. Notes},
 issue_date = {March 1998},
 volume = {23},
 number = {2},
 month = mar,
 year = {1998},
 issn = {0163-5948},
 pages = {53--62},
 numpages = {10},
 doi = {10.1145/271775.271790},
 acmid = {271790},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {automatic test data generation, constraint solving techniques, global constraints, structural testing},
} 